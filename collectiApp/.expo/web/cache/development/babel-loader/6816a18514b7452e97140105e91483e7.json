{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PanGestureHandler, State as GestureState } from 'react-native-gesture-handler';\nimport Animated, { interpolate, runOnJS, useAnimatedGestureHandler, useAnimatedStyle, useDerivedValue, useSharedValue, withSpring } from 'react-native-reanimated';\nimport DrawerProgressContext from \"../../utils/DrawerProgressContext\";\nimport Overlay from \"./Overlay\";\nvar SWIPE_DISTANCE_MINIMUM = 5;\nvar DEFAULT_DRAWER_WIDTH = '80%';\nvar minmax = function () {\n  var _f = function _f(value, start, end) {\n    return Math.min(Math.max(value, start), end);\n  };\n  _f._closure = {};\n  _f.asString = \"function _f(value,start,end){return Math.min(Math.max(value,start),end);}\";\n  _f.__workletHash = 12387352865556;\n  _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (12:15)\";\n  return _f;\n}();\nexport default function Drawer(_ref) {\n  var dimensions = _ref.dimensions,\n    drawerPosition = _ref.drawerPosition,\n    drawerStyle = _ref.drawerStyle,\n    drawerType = _ref.drawerType,\n    gestureHandlerProps = _ref.gestureHandlerProps,\n    hideStatusBarOnOpen = _ref.hideStatusBarOnOpen,\n    keyboardDismissMode = _ref.keyboardDismissMode,\n    onClose = _ref.onClose,\n    onOpen = _ref.onOpen,\n    open = _ref.open,\n    overlayStyle = _ref.overlayStyle,\n    renderDrawerContent = _ref.renderDrawerContent,\n    renderSceneContent = _ref.renderSceneContent,\n    statusBarAnimation = _ref.statusBarAnimation,\n    swipeDistanceThreshold = _ref.swipeDistanceThreshold,\n    swipeEdgeWidth = _ref.swipeEdgeWidth,\n    swipeEnabled = _ref.swipeEnabled,\n    swipeVelocityThreshold = _ref.swipeVelocityThreshold;\n  var getDrawerWidth = function getDrawerWidth() {\n    var _ref2 = StyleSheet.flatten(drawerStyle) || {},\n      _ref2$width = _ref2.width,\n      width = _ref2$width === void 0 ? DEFAULT_DRAWER_WIDTH : _ref2$width;\n    if (typeof width === 'string' && width.endsWith('%')) {\n      var percentage = Number(width.replace(/%$/, ''));\n      if (Number.isFinite(percentage)) {\n        return dimensions.width * (percentage / 100);\n      }\n    }\n    return typeof width === 'number' ? width : 0;\n  };\n  var drawerWidth = getDrawerWidth();\n  var isOpen = drawerType === 'permanent' ? true : open;\n  var isRight = drawerPosition === 'right';\n  var getDrawerTranslationX = React.useCallback(function () {\n    var _f = function _f(open) {\n      if (drawerPosition === 'left') {\n        return open ? 0 : -drawerWidth;\n      }\n      return open ? 0 : drawerWidth;\n    };\n    _f._closure = {\n      drawerPosition: drawerPosition,\n      drawerWidth: drawerWidth\n    };\n    _f.asString = \"function _f(open){const{drawerPosition,drawerWidth}=jsThis._closure;{if(drawerPosition==='left'){return open?0:-drawerWidth;}return open?0:drawerWidth;}}\";\n    _f.__workletHash = 4752955090285;\n    _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (60:50)\";\n    return _f;\n  }(), [drawerPosition, drawerWidth]);\n  var hideStatusBar = React.useCallback(function (hide) {\n    if (hideStatusBarOnOpen) {\n      StatusBar.setHidden(hide, statusBarAnimation);\n    }\n  }, [hideStatusBarOnOpen, statusBarAnimation]);\n  React.useEffect(function () {\n    hideStatusBar(isOpen);\n    return function () {\n      return hideStatusBar(false);\n    };\n  }, [isOpen, hideStatusBarOnOpen, statusBarAnimation, hideStatusBar]);\n  var interactionHandleRef = React.useRef(null);\n  var startInteraction = function startInteraction() {\n    interactionHandleRef.current = InteractionManager.createInteractionHandle();\n  };\n  var endInteraction = function endInteraction() {\n    if (interactionHandleRef.current != null) {\n      InteractionManager.clearInteractionHandle(interactionHandleRef.current);\n      interactionHandleRef.current = null;\n    }\n  };\n  var hideKeyboard = function hideKeyboard() {\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n  };\n  var onGestureStart = function onGestureStart() {\n    startInteraction();\n    hideKeyboard();\n    hideStatusBar(true);\n  };\n  var onGestureFinish = function onGestureFinish() {\n    endInteraction();\n  };\n\n  var hitSlop = isRight ?\n  {\n    right: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  } : {\n    left: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  };\n  var touchStartX = useSharedValue(0);\n  var touchX = useSharedValue(0);\n  var translationX = useSharedValue(getDrawerTranslationX(open));\n  var gestureState = useSharedValue(GestureState.UNDETERMINED);\n  var toggleDrawer = React.useCallback(function () {\n    var _f = function _f(open, velocity) {\n      var translateX = getDrawerTranslationX(open);\n      touchStartX.value = 0;\n      touchX.value = 0;\n      translationX.value = withSpring(translateX, {\n        velocity: velocity,\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01\n      });\n      if (open) {\n        runOnJS(onOpen)();\n      } else {\n        runOnJS(onClose)();\n      }\n    };\n    _f._closure = {\n      getDrawerTranslationX: getDrawerTranslationX,\n      touchStartX: touchStartX,\n      touchX: touchX,\n      translationX: translationX,\n      withSpring: withSpring,\n      runOnJS: runOnJS,\n      onOpen: onOpen,\n      onClose: onClose\n    };\n    _f.asString = \"function _f(open,velocity){const{getDrawerTranslationX,touchStartX,touchX,translationX,withSpring,runOnJS,onOpen,onClose}=jsThis._closure;{const translateX=getDrawerTranslationX(open);touchStartX.value=0;touchX.value=0;translationX.value=withSpring(translateX,{velocity:velocity,stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01});if(open){runOnJS(onOpen)();}else{runOnJS(onClose)();}}}\";\n    _f.__workletHash = 13769858983382;\n    _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (122:41)\";\n    return _f;\n  }(), [getDrawerTranslationX, onClose, onOpen, touchStartX, touchX, translationX]);\n  React.useEffect(function () {\n    return toggleDrawer(open);\n  }, [open, toggleDrawer]);\n  var onGestureEvent = useAnimatedGestureHandler({\n    onStart: function () {\n      var _f = function _f(event, ctx) {\n        ctx.startX = translationX.value;\n        gestureState.value = event.state;\n        touchStartX.value = event.x;\n        runOnJS(onGestureStart)();\n      };\n      _f._closure = {\n        translationX: translationX,\n        gestureState: gestureState,\n        touchStartX: touchStartX,\n        runOnJS: runOnJS,\n        onGestureStart: onGestureStart\n      };\n      _f.asString = \"function _f(event,ctx){const{translationX,gestureState,touchStartX,runOnJS,onGestureStart}=jsThis._closure;{ctx.startX=translationX.value;gestureState.value=event.state;touchStartX.value=event.x;runOnJS(onGestureStart)();}}\";\n      _f.__workletHash = 5837278583014;\n      _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (146:13)\";\n      return _f;\n    }(),\n    onActive: function () {\n      var _f = function _f(event, ctx) {\n        touchX.value = event.x;\n        translationX.value = ctx.startX + event.translationX;\n        gestureState.value = event.state;\n      };\n      _f._closure = {\n        touchX: touchX,\n        translationX: translationX,\n        gestureState: gestureState\n      };\n      _f.asString = \"function _f(event,ctx){const{touchX,translationX,gestureState}=jsThis._closure;{touchX.value=event.x;translationX.value=ctx.startX+event.translationX;gestureState.value=event.state;}}\";\n      _f.__workletHash = 16355851393191;\n      _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (152:14)\";\n      return _f;\n    }(),\n    onEnd: function () {\n      var _f = function _f(event) {\n        gestureState.value = event.state;\n        var nextOpen = Math.abs(event.translationX) > SWIPE_DISTANCE_MINIMUM && Math.abs(event.translationX) > swipeVelocityThreshold || Math.abs(event.translationX) > swipeDistanceThreshold ? drawerPosition === 'left' ?\n        (event.velocityX === 0 ? event.translationX : event.velocityX) > 0 :\n        (event.velocityX === 0 ? event.translationX : event.velocityX) < 0 : open;\n        toggleDrawer(nextOpen, event.velocityX);\n      };\n      _f._closure = {\n        gestureState: gestureState,\n        SWIPE_DISTANCE_MINIMUM: SWIPE_DISTANCE_MINIMUM,\n        swipeVelocityThreshold: swipeVelocityThreshold,\n        swipeDistanceThreshold: swipeDistanceThreshold,\n        drawerPosition: drawerPosition,\n        open: open,\n        toggleDrawer: toggleDrawer\n      };\n      _f.asString = \"function _f(event){const{gestureState,SWIPE_DISTANCE_MINIMUM,swipeVelocityThreshold,swipeDistanceThreshold,drawerPosition,open,toggleDrawer}=jsThis._closure;{gestureState.value=event.state;const nextOpen=Math.abs(event.translationX)>SWIPE_DISTANCE_MINIMUM&&Math.abs(event.translationX)>swipeVelocityThreshold||Math.abs(event.translationX)>swipeDistanceThreshold?drawerPosition==='left'?(event.velocityX===0?event.translationX:event.velocityX)>0:(event.velocityX===0?event.translationX:event.velocityX)<0:open;toggleDrawer(nextOpen,event.velocityX);}}\";\n      _f.__workletHash = 8167669550273;\n      _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (157:11)\";\n      return _f;\n    }(),\n    onFinish: function () {\n      var _f = function _f() {\n        runOnJS(onGestureFinish)();\n      };\n      _f._closure = {\n        runOnJS: runOnJS,\n        onGestureFinish: onGestureFinish\n      };\n      _f.asString = \"function _f(){const{runOnJS,onGestureFinish}=jsThis._closure;{runOnJS(onGestureFinish)();}}\";\n      _f.__workletHash = 10753070071248;\n      _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (164:14)\";\n      return _f;\n    }()\n  });\n  var translateX = useDerivedValue(function () {\n    var _f = function _f() {\n      var touchDistance = drawerType === 'front' && gestureState.value === GestureState.ACTIVE ? minmax(drawerPosition === 'left' ? touchStartX.value - drawerWidth : dimensions.width - drawerWidth - touchStartX.value, 0, dimensions.width) : 0;\n      var translateX = drawerPosition === 'left' ? minmax(translationX.value + touchDistance, -drawerWidth, 0) : minmax(translationX.value - touchDistance, 0, drawerWidth);\n      return translateX;\n    };\n    _f._closure = {\n      drawerType: drawerType,\n      gestureState: gestureState,\n      GestureState: {\n        ACTIVE: GestureState.ACTIVE\n      },\n      minmax: minmax,\n      drawerPosition: drawerPosition,\n      touchStartX: touchStartX,\n      drawerWidth: drawerWidth,\n      dimensions: {\n        width: dimensions.width\n      },\n      translationX: translationX\n    };\n    _f.asString = \"function _f(){const{drawerType,gestureState,GestureState,minmax,drawerPosition,touchStartX,drawerWidth,dimensions,translationX}=jsThis._closure;{const touchDistance=drawerType==='front'&&gestureState.value===GestureState.ACTIVE?minmax(drawerPosition==='left'?touchStartX.value-drawerWidth:dimensions.width-drawerWidth-touchStartX.value,0,dimensions.width):0;const translateX=drawerPosition==='left'?minmax(translationX.value+touchDistance,-drawerWidth,0):minmax(translationX.value-touchDistance,0,drawerWidth);return translateX;}}\";\n    _f.__workletHash = 16881564590342;\n    _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (168:37)\";\n    return _f;\n  }());\n  var isRTL = I18nManager.getConstants().isRTL;\n  var drawerAnimatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var distanceFromEdge = dimensions.width - drawerWidth;\n      return {\n        transform: drawerType === 'permanent' ?\n        [] : [{\n          translateX:\n          (drawerType === 'back' ? 0 : translateX.value) + (drawerPosition === 'left' ? isRTL ? -distanceFromEdge : 0 : isRTL ? 0 : distanceFromEdge)\n        }]\n      };\n    };\n    _f._closure = {\n      dimensions: {\n        width: dimensions.width\n      },\n      drawerWidth: drawerWidth,\n      drawerType: drawerType,\n      translateX: translateX,\n      drawerPosition: drawerPosition,\n      isRTL: isRTL\n    };\n    _f.asString = \"function _f(){const{dimensions,drawerWidth,drawerType,translateX,drawerPosition,isRTL}=jsThis._closure;{const distanceFromEdge=dimensions.width-drawerWidth;return{transform:drawerType==='permanent'?[]:[{translateX:(drawerType==='back'?0:translateX.value)+(drawerPosition==='left'?isRTL?-distanceFromEdge:0:isRTL?0:distanceFromEdge)}]};}}\";\n    _f.__workletHash = 17545005580326;\n    _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (199:47)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var contentAnimatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        transform: drawerType === 'permanent' ?\n        [] : [{\n          translateX:\n          drawerType === 'front' ? 0 : translateX.value + drawerWidth * (drawerPosition === 'left' ? 1 : -1)\n        }]\n      };\n    };\n    _f._closure = {\n      drawerType: drawerType,\n      translateX: translateX,\n      drawerWidth: drawerWidth,\n      drawerPosition: drawerPosition\n    };\n    _f.asString = \"function _f(){const{drawerType,translateX,drawerWidth,drawerPosition}=jsThis._closure;{return{transform:drawerType==='permanent'?[]:[{translateX:drawerType==='front'?0:translateX.value+drawerWidth*(drawerPosition==='left'?1:-1)}]};}}\";\n    _f.__workletHash = 10940802030343;\n    _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (210:48)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var progress = useDerivedValue(function () {\n    var _f = function _f() {\n      return drawerType === 'permanent' ? 1 : interpolate(translateX.value, [getDrawerTranslationX(false), getDrawerTranslationX(true)], [0, 1]);\n    };\n    _f._closure = {\n      drawerType: drawerType,\n      interpolate: interpolate,\n      translateX: translateX,\n      getDrawerTranslationX: getDrawerTranslationX\n    };\n    _f.asString = \"function _f(){const{drawerType,interpolate,translateX,getDrawerTranslationX}=jsThis._closure;{return drawerType==='permanent'?1:interpolate(translateX.value,[getDrawerTranslationX(false),getDrawerTranslationX(true)],[0,1]);}}\";\n    _f.__workletHash = 10677902672597;\n    _f.__location = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Education_projects\\\\ProjetWebMobile\\\\collecti\\\\collectiApp\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (220:35)\";\n    return _f;\n  }());\n  return React.createElement(DrawerProgressContext.Provider, {\n    value: progress\n  }, React.createElement(PanGestureHandler, _extends({\n    activeOffsetX: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    failOffsetY: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    hitSlop: hitSlop,\n    enabled: drawerType !== 'permanent' && swipeEnabled,\n    onGestureEvent: onGestureEvent\n  }, gestureHandlerProps), React.createElement(Animated.View, {\n    style: [styles.main, {\n      flexDirection: drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row'\n    }]\n  }, React.createElement(Animated.View, {\n    style: [styles.content, contentAnimatedStyle]\n  }, React.createElement(View, {\n    accessibilityElementsHidden: isOpen && drawerType !== 'permanent',\n    importantForAccessibility: isOpen && drawerType !== 'permanent' ? 'no-hide-descendants' : 'auto',\n    style: styles.content\n  }, renderSceneContent()), drawerType !== 'permanent' ? React.createElement(Overlay, {\n    progress: progress,\n    onPress: function onPress() {\n      return toggleDrawer(false);\n    },\n    style: overlayStyle\n  }) : null), React.createElement(Animated.View, {\n    accessibilityViewIsModal: isOpen && drawerType !== 'permanent',\n    removeClippedSubviews: Platform.OS !== 'ios',\n    style: [styles.container, {\n      position: drawerType === 'permanent' ? 'relative' : 'absolute',\n      zIndex: drawerType === 'back' ? -1 : 0\n    }, drawerAnimatedStyle, drawerStyle]\n  }, renderDrawerContent()))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    width: DEFAULT_DRAWER_WIDTH\n  },\n  content: {\n    flex: 1\n  },\n  main: _objectSpread({\n    flex: 1\n  }, Platform.select({\n    web: null,\n    default: {\n      overflow: 'hidden'\n    }\n  }))\n});","map":{"version":3,"sources":["Drawer.tsx"],"names":["React","I18nManager","PanGestureHandler","State","GestureState","Animated","interpolate","runOnJS","useAnimatedGestureHandler","useAnimatedStyle","useDerivedValue","useSharedValue","withSpring","DrawerProgressContext","Overlay","SWIPE_DISTANCE_MINIMUM","DEFAULT_DRAWER_WIDTH","minmax","value","start","end","Math","min","max","Drawer","dimensions","drawerPosition","drawerStyle","drawerType","gestureHandlerProps","hideStatusBarOnOpen","keyboardDismissMode","onClose","onOpen","open","overlayStyle","renderDrawerContent","renderSceneContent","statusBarAnimation","swipeDistanceThreshold","swipeEdgeWidth","swipeEnabled","swipeVelocityThreshold","getDrawerWidth","width","StyleSheet","flatten","endsWith","percentage","Number","replace","isFinite","drawerWidth","isOpen","isRight","getDrawerTranslationX","useCallback","hideStatusBar","hide","StatusBar","setHidden","useEffect","interactionHandleRef","useRef","startInteraction","current","InteractionManager","createInteractionHandle","endInteraction","clearInteractionHandle","hideKeyboard","Keyboard","dismiss","onGestureStart","onGestureFinish","hitSlop","right","undefined","left","touchStartX","touchX","translationX","gestureState","UNDETERMINED","toggleDrawer","velocity","translateX","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","onGestureEvent","onStart","event","ctx","startX","state","x","onActive","onEnd","nextOpen","abs","velocityX","onFinish","touchDistance","ACTIVE","isRTL","getConstants","drawerAnimatedStyle","distanceFromEdge","transform","contentAnimatedStyle","progress","styles","main","flexDirection","content","Platform","OS","container","position","zIndex","create","top","bottom","maxWidth","flex","select","web","default","overflow"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,SACEE,iBADF,EAGEC,KAAK,IAAIC,YAHX,QAIO,8BAJP;AAKA,OAAOC,QAAP,IACEC,WADF,EAEEC,OAFF,EAGEC,yBAHF,EAIEC,gBAJF,EAKEC,eALF,EAMEC,cANF,EAOEC,UAPF,QAQO,yBARP;AAWA,OAAOC,qBAAP;AACA,OAAOC,OAAP;AAEA,IAAMC,sBAAsB,GAAG,CAA/B;AACA,IAAMC,oBAAoB,GAAG,KAA7B;AAEA,IAAMC,MAAM;EAAA,qBAAIC,KAAD,EAAgBC,KAAhB,EAA+BC,GAA/B,EAA+C;IAG5D,OAAOC,IAAI,CAACC,GAALD,CAASA,IAAI,CAACE,GAALF,CAASH,KAATG,EAAgBF,KAAhBE,CAATA,EAAiCD,GAAjCC,CAAP;EACD,CAJD;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAMA,eAAe,SAASG,MAAT,CAAA,IAAA,EAmBC;EAnBe,IAC7BC,UAD6B,GAmBf,IAAA,CAlBdA,UAD6B;IAE7BC,cAF6B,GAmBf,IAAA,CAjBdA,cAF6B;IAG7BC,WAH6B,GAmBf,IAAA,CAhBdA,WAH6B;IAI7BC,UAJ6B,GAmBf,IAAA,CAfdA,UAJ6B;IAK7BC,mBAL6B,GAmBf,IAAA,CAddA,mBAL6B;IAM7BC,mBAN6B,GAmBf,IAAA,CAbdA,mBAN6B;IAO7BC,mBAP6B,GAmBf,IAAA,CAZdA,mBAP6B;IAQ7BC,OAR6B,GAmBf,IAAA,CAXdA,OAR6B;IAS7BC,MAT6B,GAmBf,IAAA,CAVdA,MAT6B;IAU7BC,IAV6B,GAmBf,IAAA,CATdA,IAV6B;IAW7BC,YAX6B,GAmBf,IAAA,CARdA,YAX6B;IAY7BC,mBAZ6B,GAmBf,IAAA,CAPdA,mBAZ6B;IAa7BC,kBAb6B,GAmBf,IAAA,CANdA,kBAb6B;IAc7BC,kBAd6B,GAmBf,IAAA,CALdA,kBAd6B;IAe7BC,sBAf6B,GAmBf,IAAA,CAJdA,sBAf6B;IAgB7BC,cAhB6B,GAmBf,IAAA,CAHdA,cAhB6B;IAiB7BC,YAjB6B,GAmBf,IAAA,CAFdA,YAjB6B;IAkB7BC,sBAAAA,GACc,IAAA,CADdA,sBAAAA;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAiB;IACnC,YACEE,UAAU,CAACC,OAAXD,CAAmBlB,WAAnBkB,CAAAA,IAAmC,CAAA,CADrC;MAAA,oBAAQD,KAAK;MAALA,KAAK,4BAAG5B,oBAAAA;IAGhB,IAAI,OAAO4B,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACG,QAANH,CAAe,GAAfA,CAAjC,EAAsD;MAEpD,IAAMI,UAAU,GAAGC,MAAM,CAACL,KAAK,CAACM,OAANN,CAAc,IAAdA,EAAoB,EAApBA,CAAD,CAAzB;MAEA,IAAIK,MAAM,CAACE,QAAPF,CAAgBD,UAAhBC,CAAJ,EAAiC;QAC/B,OAAOxB,UAAU,CAACmB,KAAXnB,IAAoBuB,UAAU,GAAG,GAAjCvB,CAAP;MACD;IACF;IAED,OAAO,OAAOmB,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,CAA3C;EACD,CAdD;EAgBA,IAAMQ,WAAW,GAAGT,cAAc,EAAlC;EAEA,IAAMU,MAAM,GAAGzB,UAAU,KAAK,WAAfA,GAA6B,IAA7BA,GAAoCM,IAAnD;EACA,IAAMoB,OAAO,GAAG5B,cAAc,KAAK,OAAnC;EAEA,IAAM6B,qBAAqB,GAAG,KAAK,CAACC,WAAN;IAAA,qBAC3BtB,IAAD,EAAmB;MAGjB,IAAIR,cAAc,KAAK,MAAvB,EAA+B;QAC7B,OAAOQ,IAAI,GAAG,CAAH,GAAO,CAACkB,WAAnB;MACD;MAED,OAAOlB,IAAI,GAAG,CAAH,GAAOkB,WAAlB;IACD,CAT2B;IAAA;MAAA,gBA/EhC,cAAA;MAAA,aAgBE9C;IADF;IAAA;IAAA;IAAA;IAAA;EAAA,KA0EI,CAACoB,cAAD,EAAiB0B,WAAjB,CAV4B,CAA9B;EAaA,IAAMK,aAAa,GAAG,KAAK,CAACD,WAAN,CACnBE,UAAAA,IAAD,EAAmB;IACjB,IAAI5B,mBAAJ,EAAyB;MACvB6B,SAAS,CAACC,SAAVD,CAAoBD,IAApBC,EAA0BrB,kBAA1BqB,CAAAA;IACD;EACF,CALmB,EAMpB,CAAC7B,mBAAD,EAAsBQ,kBAAtB,CANoB,CAAtB;EASAtC,KAAK,CAAC6D,SAAN7D,CAAgB,YAAM;IACpByD,aAAa,CAACJ,MAAD,CAAbI;IAEA,OAAO;MAAA,OAAMA,aAAa,CAAC,KAAD,CAA1B;IAAA;EACD,CAJDzD,EAIG,CAACqD,MAAD,EAASvB,mBAAT,EAA8BQ,kBAA9B,EAAkDmB,aAAlD,CAJHzD,CAAAA;EAMA,IAAM8D,oBAAoB,GAAG9D,KAAK,CAAC+D,MAAN/D,CAA4B,IAA5BA,CAA7B;EAEA,IAAMgE,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC7BF,oBAAoB,CAACG,OAArBH,GAA+BI,kBAAkB,CAACC,uBAAnBD,EAA/BJ;EACD,CAFD;EAIA,IAAMM,cAAc,GAAG,SAAjBA,cAAc,GAAS;IAC3B,IAAIN,oBAAoB,CAACG,OAArBH,IAAgC,IAApC,EAA0C;MACxCI,kBAAkB,CAACG,sBAAnBH,CAA0CJ,oBAAoB,CAACG,OAA/DC,CAAAA;MACAJ,oBAAoB,CAACG,OAArBH,GAA+B,IAA/BA;IACD;EACF,CALD;EAOA,IAAMQ,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzB,IAAIvC,mBAAmB,KAAK,SAA5B,EAAuC;MACrCwC,QAAQ,CAACC,OAATD,EAAAA;IACD;EACF,CAJD;EAMA,IAAME,cAAc,GAAG,SAAjBA,cAAc,GAAS;IAC3BT,gBAAgB,EAAA;IAChBM,YAAY,EAAA;IACZb,aAAa,CAAC,IAAD,CAAbA;EACD,CAJD;EAMA,IAAMiB,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC5BN,cAAc,EAAA;EACf,CA7Ea;;EAiFd,IAAMO,OAAO,GAAGrB,OAAO;EAGnB;IAAEsB,KAAK,EAAE,CAAT;IAAYhC,KAAK,EAAES,MAAM,GAAGwB,SAAH,GAAerC;EAAxC,CAHmB,GAInB;IAAEsC,IAAI,EAAE,CAAR;IAAWlC,KAAK,EAAES,MAAM,GAAGwB,SAAH,GAAerC;EAAvC,CAJJ;EAMA,IAAMuC,WAAW,GAAGpE,cAAc,CAAC,CAAD,CAAlC;EACA,IAAMqE,MAAM,GAAGrE,cAAc,CAAC,CAAD,CAA7B;EACA,IAAMsE,YAAY,GAAGtE,cAAc,CAAC4C,qBAAqB,CAACrB,IAAD,CAAtB,CAAnC;EACA,IAAMgD,YAAY,GAAGvE,cAAc,CAAeP,YAAY,CAAC+E,YAA5B,CAAnC;EAEA,IAAMC,YAAY,GAAG,KAAK,CAAC5B,WAAN;IAAA,qBAClBtB,IAAD,EAAgBmD,QAAhB,EAAsC;MAGpC,IAAMC,UAAU,GAAG/B,qBAAqB,CAACrB,IAAD,CAAxC;MAEA6C,WAAW,CAAC7D,KAAZ6D,GAAoB,CAApBA;MACAC,MAAM,CAAC9D,KAAP8D,GAAe,CAAfA;MACAC,YAAY,CAAC/D,KAAb+D,GAAqBrE,UAAU,CAAC0E,UAAD,EAAa;QAC1CD,QAD0C,EAC1CA,QAD0C;QAE1CE,SAAS,EAAE,IAF+B;QAG1CC,OAAO,EAAE,GAHiC;QAI1CC,IAAI,EAAE,CAJoC;QAK1CC,iBAAiB,EAAE,IALuB;QAM1CC,yBAAyB,EAAE,IANe;QAO1CC,kBAAkB,EAAE;MAPsB,CAAb,CAA/BX;MAUA,IAAI/C,IAAJ,EAAU;QACR3B,OAAO,CAAC0B,MAAD,CAAP1B,EAAAA;MACD,CAFD,MAEO;QACLA,OAAO,CAACyB,OAAD,CAAPzB,EAAAA;MACD;IACF,CAvBkB;IAAA;MAAA,uBArJvB,qBAAA;MAAA,aACA,WACEN;MAAAA,QAQF,MAAA;MAAA,cAKA,YAAOI;MAAAA,YACLC,UACAC;MAAAA,SAqBF,OAAA;MAAA,QANA,MAAA;MAAA,SAMA;IAAe;IAAA;IAAA;IAAA;IAAA;EAAA,KAuIX,CAACgD,qBAAD,EAAwBvB,OAAxB,EAAiCC,MAAjC,EAAyC8C,WAAzC,EAAsDC,MAAtD,EAA8DC,YAA9D,CAxBmB,CAArB;EA2BAjF,KAAK,CAAC6D,SAAN7D,CAAgB;IAAA,OAAMoF,YAAY,CAAClD,IAAD,CAAlClC;EAAAA,GAA0C,CAACkC,IAAD,EAAOkD,YAAP,CAA1CpF,CAAAA;EAEA,IAAM6F,cAAc,GAAGrF,yBAAyB,CAG9C;IACAsF,OAAO;MAAA,qBAAGC,KAAD,EAAQC,GAAR,EAAgB;QACvBA,GAAG,CAACC,MAAJD,GAAaf,YAAY,CAAC/D,KAA1B8E;QACAd,YAAY,CAAChE,KAAbgE,GAAqBa,KAAK,CAACG,KAA3BhB;QACAH,WAAW,CAAC7D,KAAZ6D,GAAoBgB,KAAK,CAACI,CAA1BpB;QAEAxE,OAAO,CAACkE,cAAD,CAAPlE,EAAAA;MACD,CAPD;MAAA;QAAA,cArLQP,YAAW;QAAA,cACvB,YAAA;QAAA,aASA,WACEE;QAAAA,SAIF,OAAOG;QAAAA,gBAAAA;MACLC;MAAAA;MAAAA;MAAAA;MAAAA;IAAAA,GAqKE;IAQA8F,QAAQ;MAAA,qBAAGL,KAAD,EAAQC,GAAR,EAAgB;QACxBhB,MAAM,CAAC9D,KAAP8D,GAAee,KAAK,CAACI,CAArBnB;QACAC,YAAY,CAAC/D,KAAb+D,GAAqBe,GAAG,CAACC,MAAJD,GAAaD,KAAK,CAACd,YAAxCA;QACAC,YAAY,CAAChE,KAAbgE,GAAqBa,KAAK,CAACG,KAA3BhB;MACD,CAZD;MAAA;QAAA,QArLJ,MAAO;QAAA,cACP,YAAA;QAAA,cASA;MACEhF;MAAAA;MAAAA;MAAAA;MAAAA;IAAAA,GA0KE;IAaAmG,KAAK;MAAA,qBAAGN,KAAD,EAAW;QAChBb,YAAY,CAAChE,KAAbgE,GAAqBa,KAAK,CAACG,KAA3BhB;QAEA,IAAMoB,QAAQ,GACXjF,IAAI,CAACkF,GAALlF,CAAS0E,KAAK,CAACd,YAAf5D,CAAAA,GAA+BN,sBAA/BM,IACCA,IAAI,CAACkF,GAALlF,CAAS0E,KAAK,CAACd,YAAf5D,CAAAA,GAA+BqB,sBADjC,IAEArB,IAAI,CAACkF,GAALlF,CAAS0E,KAAK,CAACd,YAAf5D,CAAAA,GAA+BkB,sBAF/B,GAGI,cAAc,KAAK,MAAnB;QAEE,CAACwD,KAAK,CAACS,SAANT,KAAoB,CAApBA,GAAwBA,KAAK,CAACd,YAA9Bc,GAA6CA,KAAK,CAACS,SAApD,IAAiE,CAFnE;QAIE,CAACT,KAAK,CAACS,SAANT,KAAoB,CAApBA,GAAwBA,KAAK,CAACd,YAA9Bc,GAA6CA,KAAK,CAACS,SAApD,IAAiE,CAPvE,GAQItE,IATN;QAWAkD,YAAY,CAACkB,QAAD,EAAWP,KAAK,CAACS,SAAjB,CAAZpB;MACD,CA5BD;MAAA;QAAA,cArLJ,YAAYpF;QAAAA,wBACZ,sBAAA;QAAA,wBAAA,sBAAA;QAAA,wBAAA,sBAAA;QAAA,gBAAA,cAAA;QAAA,MA0BA,IAAA;QAAA,cAEA;MAAMe;MAAAA;MAAAA;MAAAA;MAAAA;IAAAA,GAwJF;IA6BA0F,QAAQ;MAAA,uBAAQ;QACdlG,OAAO,CAACmE,eAAD,CAAPnE,EAAAA;MACD,CAAA;MAAA;QAAA,SApNL,OAAO;QAAA,iBAAA;MAAgB;MAAA;MAAA;MAAA;MAAA;IAAA;EAqLnB,CAH8C,CAAhD;EAqCA,IAAM+E,UAAU,GAAG5E,eAAe;IAAA,uBAAO;MA0BvC,IAAMgG,aAAa,GACjB9E,UAAU,KAAK,OAAfA,IAA0BsD,YAAY,CAAChE,KAAbgE,KAAuB9E,YAAY,CAACuG,MAA9D/E,GACIX,MAAM,CACJS,cAAc,KAAK,MAAnBA,GACIqD,WAAW,CAAC7D,KAAZ6D,GAAoB3B,WADxB1B,GAEID,UAAU,CAACmB,KAAXnB,GAAmB2B,WAAnB3B,GAAiCsD,WAAW,CAAC7D,KAH7C,EAIJ,CAJI,EAKJO,UAAU,CAACmB,KALP,CADVhB,GAQI,CATN;MAWA,IAAM0D,UAAU,GACd5D,cAAc,KAAK,MAAnBA,GACIT,MAAM,CAACgE,YAAY,CAAC/D,KAAb+D,GAAqByB,aAAtB,EAAqC,CAACtD,WAAtC,EAAmD,CAAnD,CADV1B,GAEIT,MAAM,CAACgE,YAAY,CAAC/D,KAAb+D,GAAqByB,aAAtB,EAAqC,CAArC,EAAwCtD,WAAxC,CAHZ;MAKA,OAAOkC,UAAP;IACD,CA3CiC;IAAA;MAAA,YAjLL,UAAA;MAAA,cAAA,YAAA;MAAA;QAAA,QAAA,YAAA,CAAA;MAAA;MAAA,QAAA,MAAA;MAAA,gBAAA,cAAA;MAAA,aAAA,WAAA;MAAA,aAAA,WAAA;MAAA;QAAA,OAAA,UAAA,CAAA;MAAA;MAAA,cAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA,IAiL7B;EA6CA,IAAMsB,KAAK,GAAG3G,WAAW,CAAC4G,YAAZ5G,EAAAA,CAA2B2G,KAAzC;EACA,IAAME,mBAAmB,GAAGrG,gBAAgB;IAAA,uBAAO;MACjD,IAAMsG,gBAAgB,GAAGtF,UAAU,CAACmB,KAAXnB,GAAmB2B,WAA5C;MAEA,OAAO;QACL4D,SAAS,EACP,UAAU,KAAK,WAAf;QAGI,EAHJ,GAII,CACE;UACE1B,UAAU;UAER,CAAC1D,UAAU,KAAK,MAAfA,GAAwB,CAAxBA,GAA4B0D,UAAU,CAACpE,KAAxC,KACCQ,cAAc,KAAK,MAAnBA,GACGkF,KAAK,GACH,CAACG,gBADE,GAEH,CAHLrF,GAIGkF,KAAK,GACL,CADK,GAELG,gBAPJ;QAHJ,CADF;MAND,CAAP;IAqBD,CAxB2C;IAAA;MAAA;QAAA,OArQvB,UAAvB,CAAA;MAAA;MAAA,aAAA,WAAA;MAAA,Y;;;;;;;;;;MAqQE;EA0BA,IAAME,oBAAoB,GAAGxG,gBAAgB;IAAA,uBAAO;MAClD,OAAO;QACLuG,SAAS,EACP,UAAU,KAAK,WAAf;QAGI,EAHJ,GAII,CACE;UACE1B,UAAU;UAER1D,UAAU,KAAK,OAAfA,GACI,CADJA,GAEI0D,UAAU,CAACpE,KAAXoE,GACAlC,WAAW,IAAI1B,cAAc,KAAK,MAAnBA,GAA4B,CAA5BA,GAAgC,CAAC,CAArC;QANnB,CADF;MAND,CAAP;IAiBD,CAlB4C;IAAA;MAAA,YAjQzCV,UAAAA;MAAAA,YAAN,UAAA;MAAA,aAAA,WAAA;MAAA,gBAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA,IAiQE;EAoBA,IAAMkG,QAAQ,GAAGxG,eAAe;IAAA,uBAAO;MACrC,OAAOkB,UAAU,KAAK,WAAfA,GACH,CADGA,GAEHtB,WAAW,CACTgF,UAAU,CAACpE,KADF,EAET,CAACqC,qBAAqB,CAAC,KAAD,CAAtB,EAA+BA,qBAAqB,CAAC,IAAD,CAApD,CAFS,EAGT,CAAC,CAAD,EAAI,CAAJ,CAHS,CAFf;IAOD,CAR+B;IAAA;MAAA,YAnT3B,UAAP;MAAA,aAAA,WAAA;MAAA,YAAA,UAAA;MAAA,uBAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA,IAmTE;EAUA,OACE,KAAA,CAAA,aAAA,CAAC,qBAAD,CAAuB,QAAvB,EAAA;IAAgC,KAAK,EAAE2D;EAAvC,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA,QAAA,CAAA;IACE,aAAa,EAAE,CAAC,CAACnG,sBAAF,EAA0BA,sBAA1B,CADjB;IAEE,WAAW,EAAE,CAAC,CAACA,sBAAF,EAA0BA,sBAA1B,CAFf;IAGE,OAAO,EAAE4D,OAHX;IAIE,OAAO,EAAE/C,UAAU,KAAK,WAAfA,IAA8Ba,YAJzC;IAKE,cAAc,EAAEoD;EALlB,CAAA,EAMMhE,mBANN,CAAA,EASE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAU,IAAV,EAAA;IACE,KAAK,EAAE,CACLsF,MAAM,CAACC,IADF,EAEL;MACEC,aAAa,EACXzF,UAAU,KAAK,WAAfA,IAA8B,CAAC0B,OAA/B1B,GAAyC,aAAzCA,GAAyD;IAF7D,CAFK;EADT,CAAA,EASE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAU,IAAV,EAAA;IAAe,KAAK,EAAE,CAACuF,MAAM,CAACG,OAAR,EAAiBL,oBAAjB;EAAtB,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IACE,2BAA2B,EAAE5D,MAAM,IAAIzB,UAAU,KAAK,WADxD;IAEE,yBAAyB,EACvByB,MAAM,IAAIzB,UAAU,KAAK,WAAzByB,GACI,qBADJA,GAEI,MALR;IAOE,KAAK,EAAE8D,MAAM,CAACG;EAPhB,CAAA,EASGjF,kBAAkB,EATrB,CADF,EAYG,UAAU,KAAK,WAAf,GACC,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA;IACE,QAAQ,EAAE6E,QADZ;IAEE,OAAO,EAAE;MAAA,OAAM9B,YAAY,CAAC,KAAD,CAF7B;IAAA;IAGE,KAAK,EAAEjD;EAHT,CAAA,CADD,GAMG,IAlBN,CATF,EA6BE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAU,IAAV,EAAA;IACE,wBAAwB,EAAEkB,MAAM,IAAIzB,UAAU,KAAK,WADrD;IAEE,qBAAqB,EAAE2F,QAAQ,CAACC,EAATD,KAAgB,KAFzC;IAGE,KAAK,EAAE,CACLJ,MAAM,CAACM,SADF,EAEL;MACEC,QAAQ,EAAE9F,UAAU,KAAK,WAAfA,GAA6B,UAA7BA,GAA0C,UADtD;MAEE+F,MAAM,EAAE/F,UAAU,KAAK,MAAfA,GAAwB,CAAC,CAAzBA,GAA6B;IAFvC,CAFK,EAMLkF,mBANK,EAOLnF,WAPK;EAHT,CAAA,EAaGS,mBAAmB,EAbtB,CA7BF,CATF,CADF,CADF;AA2DD;AAED,IAAM+E,MAAM,GAAG,UAAU,CAACS,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,GAAG,EAAE,CADI;IAETC,MAAM,EAAE,CAFC;IAGTC,QAAQ,EAAE,MAHD;IAITnF,KAAK,EAAE5B;EAJE,CADoB;EAO/BsG,OAAO,EAAE;IACPU,IAAI,EAAE;EADC,CAPsB;EAU/BZ,IAAI;IACFY,IAAI,EAAE;EADF,GAED,QAAQ,CAACC,MAAT,CAAgB;IAGjBC,GAAG,EAAE,IAHY;IAIjBC,OAAO,EAAE;MAAEC,QAAQ,EAAE;IAAZ;EAJQ,CAAhB,CAAA;AAZ0B,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  InteractionManager,\n  Keyboard,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n  State as GestureState,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  interpolate,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\n\nimport type { DrawerProps } from '../../types';\nimport DrawerProgressContext from '../../utils/DrawerProgressContext';\nimport Overlay from './Overlay';\n\nconst SWIPE_DISTANCE_MINIMUM = 5;\nconst DEFAULT_DRAWER_WIDTH = '80%';\n\nconst minmax = (value: number, start: number, end: number) => {\n  'worklet';\n\n  return Math.min(Math.max(value, start), end);\n};\n\nexport default function Drawer({\n  dimensions,\n  drawerPosition,\n  drawerStyle,\n  drawerType,\n  gestureHandlerProps,\n  hideStatusBarOnOpen,\n  keyboardDismissMode,\n  onClose,\n  onOpen,\n  open,\n  overlayStyle,\n  renderDrawerContent,\n  renderSceneContent,\n  statusBarAnimation,\n  swipeDistanceThreshold,\n  swipeEdgeWidth,\n  swipeEnabled,\n  swipeVelocityThreshold,\n}: DrawerProps) {\n  const getDrawerWidth = (): number => {\n    const { width = DEFAULT_DRAWER_WIDTH } =\n      StyleSheet.flatten(drawerStyle) || {};\n\n    if (typeof width === 'string' && width.endsWith('%')) {\n      // Try to calculate width if a percentage is given\n      const percentage = Number(width.replace(/%$/, ''));\n\n      if (Number.isFinite(percentage)) {\n        return dimensions.width * (percentage / 100);\n      }\n    }\n\n    return typeof width === 'number' ? width : 0;\n  };\n\n  const drawerWidth = getDrawerWidth();\n\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n\n  const getDrawerTranslationX = React.useCallback(\n    (open: boolean) => {\n      'worklet';\n\n      if (drawerPosition === 'left') {\n        return open ? 0 : -drawerWidth;\n      }\n\n      return open ? 0 : drawerWidth;\n    },\n    [drawerPosition, drawerWidth]\n  );\n\n  const hideStatusBar = React.useCallback(\n    (hide: boolean) => {\n      if (hideStatusBarOnOpen) {\n        StatusBar.setHidden(hide, statusBarAnimation);\n      }\n    },\n    [hideStatusBarOnOpen, statusBarAnimation]\n  );\n\n  React.useEffect(() => {\n    hideStatusBar(isOpen);\n\n    return () => hideStatusBar(false);\n  }, [isOpen, hideStatusBarOnOpen, statusBarAnimation, hideStatusBar]);\n\n  const interactionHandleRef = React.useRef<number | null>(null);\n\n  const startInteraction = () => {\n    interactionHandleRef.current = InteractionManager.createInteractionHandle();\n  };\n\n  const endInteraction = () => {\n    if (interactionHandleRef.current != null) {\n      InteractionManager.clearInteractionHandle(interactionHandleRef.current);\n      interactionHandleRef.current = null;\n    }\n  };\n\n  const hideKeyboard = () => {\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n  };\n\n  const onGestureStart = () => {\n    startInteraction();\n    hideKeyboard();\n    hideStatusBar(true);\n  };\n\n  const onGestureFinish = () => {\n    endInteraction();\n  };\n\n  // FIXME: Currently hitSlop is broken when on Android when drawer is on right\n  // https://github.com/software-mansion/react-native-gesture-handler/issues/569\n  const hitSlop = isRight\n    ? // Extend hitSlop to the side of the screen when drawer is closed\n      // This lets the user drag the drawer from the side of the screen\n      { right: 0, width: isOpen ? undefined : swipeEdgeWidth }\n    : { left: 0, width: isOpen ? undefined : swipeEdgeWidth };\n\n  const touchStartX = useSharedValue(0);\n  const touchX = useSharedValue(0);\n  const translationX = useSharedValue(getDrawerTranslationX(open));\n  const gestureState = useSharedValue<GestureState>(GestureState.UNDETERMINED);\n\n  const toggleDrawer = React.useCallback(\n    (open: boolean, velocity?: number) => {\n      'worklet';\n\n      const translateX = getDrawerTranslationX(open);\n\n      touchStartX.value = 0;\n      touchX.value = 0;\n      translationX.value = withSpring(translateX, {\n        velocity,\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n      });\n\n      if (open) {\n        runOnJS(onOpen)();\n      } else {\n        runOnJS(onClose)();\n      }\n    },\n    [getDrawerTranslationX, onClose, onOpen, touchStartX, touchX, translationX]\n  );\n\n  React.useEffect(() => toggleDrawer(open), [open, toggleDrawer]);\n\n  const onGestureEvent = useAnimatedGestureHandler<\n    PanGestureHandlerGestureEvent,\n    { startX: number }\n  >({\n    onStart: (event, ctx) => {\n      ctx.startX = translationX.value;\n      gestureState.value = event.state;\n      touchStartX.value = event.x;\n\n      runOnJS(onGestureStart)();\n    },\n    onActive: (event, ctx) => {\n      touchX.value = event.x;\n      translationX.value = ctx.startX + event.translationX;\n      gestureState.value = event.state;\n    },\n    onEnd: (event) => {\n      gestureState.value = event.state;\n\n      const nextOpen =\n        (Math.abs(event.translationX) > SWIPE_DISTANCE_MINIMUM &&\n          Math.abs(event.translationX) > swipeVelocityThreshold) ||\n        Math.abs(event.translationX) > swipeDistanceThreshold\n          ? drawerPosition === 'left'\n            ? // If swiped to right, open the drawer, otherwise close it\n              (event.velocityX === 0 ? event.translationX : event.velocityX) > 0\n            : // If swiped to left, open the drawer, otherwise close it\n              (event.velocityX === 0 ? event.translationX : event.velocityX) < 0\n          : open;\n\n      toggleDrawer(nextOpen, event.velocityX);\n    },\n    onFinish: () => {\n      runOnJS(onGestureFinish)();\n    },\n  });\n\n  const translateX = useDerivedValue(() => {\n    // Comment stolen from react-native-gesture-handler/DrawerLayout\n    //\n    // While closing the drawer when user starts gesture outside of its area (in greyed\n    // out part of the window), we want the drawer to follow only once finger reaches the\n    // edge of the drawer.\n    // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n    // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n    // an arrow pointing left\n    // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    +---------------+    +---------------+    +---------------+    +---------------+\n    //\n    // For the above to work properly we define animated value that will keep start position\n    // of the gesture. Then we use that value to calculate how much we need to subtract from\n    // the translationX. If the gesture started on the greyed out area we take the distance from the\n    // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n    // drawer be pulled back as soon as you start the pan.\n    //\n    // This is used only when drawerType is \"front\"\n    const touchDistance =\n      drawerType === 'front' && gestureState.value === GestureState.ACTIVE\n        ? minmax(\n            drawerPosition === 'left'\n              ? touchStartX.value - drawerWidth\n              : dimensions.width - drawerWidth - touchStartX.value,\n            0,\n            dimensions.width\n          )\n        : 0;\n\n    const translateX =\n      drawerPosition === 'left'\n        ? minmax(translationX.value + touchDistance, -drawerWidth, 0)\n        : minmax(translationX.value - touchDistance, 0, drawerWidth);\n\n    return translateX;\n  });\n\n  const isRTL = I18nManager.getConstants().isRTL;\n  const drawerAnimatedStyle = useAnimatedStyle(() => {\n    const distanceFromEdge = dimensions.width - drawerWidth;\n\n    return {\n      transform:\n        drawerType === 'permanent'\n          ? // Reanimated needs the property to be present, but it results in Browser bug\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n            []\n          : [\n              {\n                translateX:\n                  // The drawer stays in place when `drawerType` is `back`\n                  (drawerType === 'back' ? 0 : translateX.value) +\n                  (drawerPosition === 'left'\n                    ? isRTL\n                      ? -distanceFromEdge\n                      : 0\n                    : isRTL\n                    ? 0\n                    : distanceFromEdge),\n              },\n            ],\n    };\n  });\n\n  const contentAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      transform:\n        drawerType === 'permanent'\n          ? // Reanimated needs the property to be present, but it results in Browser bug\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n            []\n          : [\n              {\n                translateX:\n                  // The screen content stays in place when `drawerType` is `front`\n                  drawerType === 'front'\n                    ? 0\n                    : translateX.value +\n                      drawerWidth * (drawerPosition === 'left' ? 1 : -1),\n              },\n            ],\n    };\n  });\n\n  const progress = useDerivedValue(() => {\n    return drawerType === 'permanent'\n      ? 1\n      : interpolate(\n          translateX.value,\n          [getDrawerTranslationX(false), getDrawerTranslationX(true)],\n          [0, 1]\n        );\n  });\n\n  return (\n    <DrawerProgressContext.Provider value={progress}>\n      <PanGestureHandler\n        activeOffsetX={[-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM]}\n        failOffsetY={[-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM]}\n        hitSlop={hitSlop}\n        enabled={drawerType !== 'permanent' && swipeEnabled}\n        onGestureEvent={onGestureEvent}\n        {...gestureHandlerProps}\n      >\n        {/* Immediate child of gesture handler needs to be an Animated.View */}\n        <Animated.View\n          style={[\n            styles.main,\n            {\n              flexDirection:\n                drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row',\n            },\n          ]}\n        >\n          <Animated.View style={[styles.content, contentAnimatedStyle]}>\n            <View\n              accessibilityElementsHidden={isOpen && drawerType !== 'permanent'}\n              importantForAccessibility={\n                isOpen && drawerType !== 'permanent'\n                  ? 'no-hide-descendants'\n                  : 'auto'\n              }\n              style={styles.content}\n            >\n              {renderSceneContent()}\n            </View>\n            {drawerType !== 'permanent' ? (\n              <Overlay\n                progress={progress}\n                onPress={() => toggleDrawer(false)}\n                style={overlayStyle}\n              />\n            ) : null}\n          </Animated.View>\n          <Animated.View\n            accessibilityViewIsModal={isOpen && drawerType !== 'permanent'}\n            removeClippedSubviews={Platform.OS !== 'ios'}\n            style={[\n              styles.container,\n              {\n                position: drawerType === 'permanent' ? 'relative' : 'absolute',\n                zIndex: drawerType === 'back' ? -1 : 0,\n              },\n              drawerAnimatedStyle,\n              drawerStyle as any,\n            ]}\n          >\n            {renderDrawerContent()}\n          </Animated.View>\n        </Animated.View>\n      </PanGestureHandler>\n    </DrawerProgressContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    width: DEFAULT_DRAWER_WIDTH,\n  },\n  content: {\n    flex: 1,\n  },\n  main: {\n    flex: 1,\n    ...Platform.select({\n      // FIXME: We need to hide `overflowX` on Web so the translated content doesn't show offscreen.\n      // But adding `overflowX: 'hidden'` prevents content from collapsing the URL bar.\n      web: null,\n      default: { overflow: 'hidden' },\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}