{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"enabled\", \"layout\", \"style\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default React.forwardRef(function CardSheet(_ref, ref) {\n  var enabled = _ref.enabled,\n    layout = _ref.layout,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    fill = _React$useState2[0],\n    setFill = _React$useState2[1];\n\n  var _React$useState3 = React.useState('auto'),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    pointerEvents = _React$useState4[0],\n    setPointerEvents = _React$useState4[1];\n  React.useImperativeHandle(ref, function () {\n    return {\n      setPointerEvents: setPointerEvents\n    };\n  });\n  React.useEffect(function () {\n    if (typeof document === 'undefined' || !document.body) {\n      return;\n    }\n    var width = document.body.clientWidth;\n    var height = document.body.clientHeight;\n    setFill(width === layout.width && height === layout.height);\n  }, [layout.height, layout.width]);\n  return React.createElement(View, _extends({}, rest, {\n    pointerEvents: pointerEvents,\n    style: [enabled && fill ? styles.page : styles.card, style]\n  }));\n});\nvar styles = StyleSheet.create({\n  page: {\n    minHeight: '100%'\n  },\n  card: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["CardSheet.tsx"],"names":["React","forwardRef","CardSheet","enabled","layout","style","rest","ref","fill","setFill","useState","pointerEvents","setPointerEvents","useImperativeHandle","useEffect","document","body","width","clientWidth","height","clientHeight","styles","page","card","create","minHeight","flex","overflow"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAiBA,eAAe,KAAK,CAACC,UAAN,CAAsC,SAASC,SAAT,CAAA,IAAA,EAEnDK,GAFmD,EAGnD;EAFA,IAAEJ,OAAF,GAEA,IAAA,CAFEA,OAAF;IAAWC,MAAX,GAEA,IAAA,CAFWA,MAAX;IAAmBC,KAAnB,GAEA,IAAA,CAFmBA,KAAnB;IAA6BC,IAAAA,4BAE7B,IAAA;EACA,sBAAwBN,KAAK,CAACU,QAANV,CAAe,KAAfA,CADxB;IAAA;IACOQ,IAAD;IAAOC,OAAP;;EAGN,uBACET,KAAK,CAACU,QAANV,CAA2C,MAA3CA,CADF;IAAA;IAAOW,aAAD;IAAgBC,gBAAhB;EAGNZ,KAAK,CAACa,mBAANb,CAA0BO,GAA1BP,EAA+B,YAAM;IACnC,OAAO;MAAEY,gBAAAA,EAAAA;IAAF,CAAP;EACD,CAFDZ,CAAAA;EAIAA,KAAK,CAACc,SAANd,CAAgB,YAAM;IACpB,IAAI,OAAOe,QAAP,KAAoB,WAApB,IAAmC,CAACA,QAAQ,CAACC,IAAjD,EAAuD;MAErD;IACD;IAED,IAAMC,KAAK,GAAGF,QAAQ,CAACC,IAATD,CAAcG,WAA5B;IACA,IAAMC,MAAM,GAAGJ,QAAQ,CAACC,IAATD,CAAcK,YAA7B;IAEAX,OAAO,CAACQ,KAAK,KAAKb,MAAM,CAACa,KAAjBA,IAA0BE,MAAM,KAAKf,MAAM,CAACe,MAA7C,CAAPV;EACD,CAVDT,EAUG,CAACI,MAAM,CAACe,MAAR,EAAgBf,MAAM,CAACa,KAAvB,CAVHjB,CAAAA;EAYA,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACMM,IADN,EAAA;IAEE,aAAa,EAAEK,aAFjB;IAGE,KAAK,EAAE,CAACR,OAAO,IAAIK,IAAXL,GAAkBkB,MAAM,CAACC,IAAzBnB,GAAgCkB,MAAM,CAACE,IAAxC,EAA8ClB,KAA9C;EAHT,CAAA,CAAA,CADF;AAOD,CAjCc,CAAf;AAmCA,IAAMgB,MAAM,GAAG,UAAU,CAACG,MAAX,CAAkB;EAC/BF,IAAI,EAAE;IACJG,SAAS,EAAE;EADP,CADyB;EAI/BF,IAAI,EAAE;IACJG,IAAI,EAAE,CADF;IAEJC,QAAQ,EAAE;EAFN;AAJyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\n\ntype Props = ViewProps & {\n  enabled: boolean;\n  layout: { width: number; height: number };\n  children: React.ReactNode;\n};\n\nexport type CardSheetRef = {\n  setPointerEvents: React.Dispatch<ViewProps['pointerEvents']>;\n};\n\n// This component will render a page which overflows the screen\n// if the container fills the body by comparing the size\n// This lets the document.body handle scrolling of the content\n// It's necessary for mobile browsers to be able to hide address bar on scroll\nexport default React.forwardRef<CardSheetRef, Props>(function CardSheet(\n  { enabled, layout, style, ...rest },\n  ref\n) {\n  const [fill, setFill] = React.useState(false);\n  // To avoid triggering a rerender in Card during animation we had to move\n  // the state to CardSheet. The `setPointerEvents` is then hoisted back to the Card.\n  const [pointerEvents, setPointerEvents] =\n    React.useState<ViewProps['pointerEvents']>('auto');\n\n  React.useImperativeHandle(ref, () => {\n    return { setPointerEvents };\n  });\n\n  React.useEffect(() => {\n    if (typeof document === 'undefined' || !document.body) {\n      // Only run when DOM is available\n      return;\n    }\n\n    const width = document.body.clientWidth;\n    const height = document.body.clientHeight;\n\n    setFill(width === layout.width && height === layout.height);\n  }, [layout.height, layout.width]);\n\n  return (\n    <View\n      {...rest}\n      pointerEvents={pointerEvents}\n      style={[enabled && fill ? styles.page : styles.card, style]}\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    minHeight: '100%',\n  },\n  card: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}