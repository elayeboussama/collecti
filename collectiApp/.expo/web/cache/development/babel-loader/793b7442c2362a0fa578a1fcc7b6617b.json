{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: null\n  },\n  reducers: {\n    setCredentials: function () {\n      var _setCredentials = _asyncToGenerator(function* (state, action) {\n        var token = action.payload.token;\n        state.token = token;\n        yield AsyncStorage.setItem(\"token\", token);\n      });\n      function setCredentials(_x, _x2) {\n        return _setCredentials.apply(this, arguments);\n      }\n      return setCredentials;\n    }(),\n    getCredentials: function getCredentials(state, action) {\n      var user = action.payload.organization;\n      state.user = user;\n    }\n  }\n});\nvar _authSlice$actions = authSlice.actions,\n  setCredentials = _authSlice$actions.setCredentials,\n  getCredentials = _authSlice$actions.getCredentials;\nexport { setCredentials, getCredentials };\nexport default authSlice.reducer;\nexport var selectCurrentUser = function selectCurrentUser(state) {\n  return state.user;\n};\nexport var selectCurrentToken = function selectCurrentToken(state) {\n  return state.token;\n};","map":{"version":3,"names":["createSlice","AsyncStorage","authSlice","name","initialState","user","token","reducers","setCredentials","state","action","payload","setItem","getCredentials","organization","actions","reducer","selectCurrentUser","selectCurrentToken"],"sources":["C:/Users/ELAYEB/OneDrive/Documents/GitHub/collecti/collectiApp/redux/slicers/AuthSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: { user: null, token: null },\r\n    reducers: {\r\n        setCredentials: async(state, action) => {\r\n            const token = action.payload.token;\r\n            state.token = token;\r\n            await AsyncStorage.setItem(\"token\", token);\r\n        },\r\n        getCredentials: (state, action) => {\r\n            const user = action.payload.organization;\r\n            state.user = user;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setCredentials, getCredentials } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n\r\nexport const selectCurrentUser = (state) => state.user;\r\nexport const selectCurrentToken = (state) => state.token;"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC;EACzCC,QAAQ,EAAE;IACNC,cAAc;MAAA,wCAAE,WAAMC,KAAK,EAAEC,MAAM,EAAK;QACpC,IAAMJ,KAAK,GAAGI,MAAM,CAACC,OAAO,CAACL,KAAK;QAClCG,KAAK,CAACH,KAAK,GAAGA,KAAK;QACnB,MAAML,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;MAC9C,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;IACDO,cAAc,EAAE,wBAACJ,KAAK,EAAEC,MAAM,EAAK;MAC/B,IAAML,IAAI,GAAGK,MAAM,CAACC,OAAO,CAACG,YAAY;MACxCL,KAAK,CAACJ,IAAI,GAAGA,IAAI;IACrB;EACJ;AACJ,CAAC,CAAC;AAEK,yBAA2CH,SAAS,CAACa,OAAO;EAApDP,cAAc,sBAAdA,cAAc;EAAEK,cAAc,sBAAdA,cAAc;AAAuB;AAEpE,eAAeX,SAAS,CAACc,OAAO;AAEhC,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIR,KAAK;EAAA,OAAKA,KAAK,CAACJ,IAAI;AAAA;AACtD,OAAO,IAAMa,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIT,KAAK;EAAA,OAAKA,KAAK,CAACH,KAAK;AAAA"},"metadata":{},"sourceType":"module"}