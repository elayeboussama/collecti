{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport conditional from \"../utils/conditional\";\nvar add = Animated.add,\n  multiply = Animated.multiply;\n\nexport function forHorizontalIOS(_ref) {\n  var current = _ref.current,\n    next = _ref.next,\n    inverted = _ref.inverted,\n    screen = _ref.layouts.screen;\n  var translateFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.width, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var translateUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.width * -0.3],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp'\n  });\n  var shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      transform: [\n      {\n        translateX: translateFocused\n      },\n      {\n        translateX: translateUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    },\n    shadowStyle: {\n      shadowOpacity: shadowOpacity\n    }\n  };\n}\n\nexport function forVerticalIOS(_ref2) {\n  var current = _ref2.current,\n    inverted = _ref2.inverted,\n    screen = _ref2.layouts.screen;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  return {\n    cardStyle: {\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\n\nexport function forModalPresentationIOS(_ref3) {\n  var index = _ref3.index,\n    current = _ref3.current,\n    next = _ref3.next,\n    inverted = _ref3.inverted,\n    screen = _ref3.layouts.screen,\n    insets = _ref3.insets;\n  var hasNotchIos = Platform.OS === 'ios' && !Platform.isPad && !Platform.isTVOS && insets.top > 20;\n  var isLandscape = screen.width > screen.height;\n  var topOffset = isLandscape ? 0 : 10;\n  var statusBarHeight = insets.top;\n  var aspectRatio = screen.height / screen.width;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var isFirst = index === 0;\n  var translateY = multiply(progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [screen.height, isFirst ? 0 : topOffset, (isFirst ? statusBarHeight : 0) - topOffset * aspectRatio]\n  }), inverted);\n  var overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1]\n  });\n  var scale = isLandscape ? 1 : progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [1, 1, screen.width ? 1 - topOffset * 2 / screen.width : 1]\n  });\n  var borderRadius = isLandscape ? 0 : isFirst ? progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0, hasNotchIos ? 38 : 0, 10]\n  }) : 10;\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      borderBottomLeftRadius: hasNotchIos ? borderRadius : 0,\n      borderBottomRightRadius: hasNotchIos ? borderRadius : 0,\n      marginTop: isFirst ? 0 : statusBarHeight,\n      marginBottom: isFirst ? 0 : topOffset,\n      transform: [{\n        translateY: translateY\n      }, {\n        scale: scale\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n\nexport function forFadeFromBottomAndroid(_ref4) {\n  var current = _ref4.current,\n    inverted = _ref4.inverted,\n    screen = _ref4.layouts.screen,\n    closing = _ref4.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.08, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 0.5, 0.9, 1],\n    outputRange: [0, 0.25, 0.7, 1],\n    extrapolate: 'clamp'\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\n\nexport function forRevealFromBottomAndroid(_ref5) {\n  var current = _ref5.current,\n    next = _ref5.next,\n    inverted = _ref5.inverted,\n    screen = _ref5.layouts.screen;\n  var containerTranslateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * (95.9 / 100) * -1, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.height * (2 / 100) * -1],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp'\n  });\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{\n        translateY: containerTranslateY\n      }]\n    },\n    cardStyle: {\n      transform: [{\n        translateY: cardTranslateYFocused\n      }, {\n        translateY: cardTranslateYUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n\nexport function forScaleFromCenterAndroid(_ref6) {\n  var current = _ref6.current,\n    next = _ref6.next,\n    closing = _ref6.closing;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0]\n  });\n  var scale = conditional(closing, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.925, 1],\n    extrapolate: 'clamp'\n  }), progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0.85, 1, 1.075]\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        scale: scale\n      }]\n    }\n  };\n}\n\nexport function forBottomSheetAndroid(_ref7) {\n  var current = _ref7.current,\n    inverted = _ref7.inverted,\n    screen = _ref7.layouts.screen,\n    closing = _ref7.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.8, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }));\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n\nexport function forFadeFromCenter(_ref8) {\n  var progress = _ref8.current.progress;\n  return {\n    cardStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.5, 0.9, 1],\n        outputRange: [0, 0.25, 0.7, 1]\n      })\n    },\n    overlayStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 0.5],\n        extrapolate: 'clamp'\n      })\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}","map":{"version":3,"sources":["CardStyleInterpolators.tsx"],"names":["conditional","add","multiply","Animated","forHorizontalIOS","current","next","inverted","layouts","screen","translateFocused","progress","interpolate","inputRange","outputRange","width","extrapolate","translateUnfocused","overlayOpacity","shadowOpacity","cardStyle","transform","translateX","overlayStyle","opacity","shadowStyle","forVerticalIOS","translateY","height","forModalPresentationIOS","index","insets","hasNotchIos","Platform","OS","isPad","isTVOS","top","isLandscape","topOffset","statusBarHeight","aspectRatio","isFirst","scale","borderRadius","overflow","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","marginTop","marginBottom","forFadeFromBottomAndroid","closing","forRevealFromBottomAndroid","containerTranslateY","cardTranslateYFocused","cardTranslateYUnfocused","containerStyle","forScaleFromCenterAndroid","forBottomSheetAndroid","forFadeFromCenter","forNoAnimation"],"mappings":"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","sourcesContent":["import { Animated, Platform } from 'react-native';\n\nimport type {\n  StackCardInterpolatedStyle,\n  StackCardInterpolationProps,\n} from '../types';\nimport conditional from '../utils/conditional';\n\nconst { add, multiply } = Animated;\n\n/**\n * Standard iOS-style slide in from the right.\n */\nexport function forHorizontalIOS({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateFocused = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.width, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const translateUnfocused = next\n    ? multiply(\n        next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, screen.width * -0.3],\n          extrapolate: 'clamp',\n        }),\n        inverted\n      )\n    : 0;\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp',\n  });\n\n  const shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    cardStyle: {\n      transform: [\n        // Translation for the animation of the current card\n        { translateX: translateFocused },\n        // Translation for the animation of the card on top of this\n        { translateX: translateUnfocused },\n      ],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n    shadowStyle: { shadowOpacity },\n  };\n}\n\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\nexport function forVerticalIOS({\n  current,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  return {\n    cardStyle: {\n      transform: [{ translateY }],\n    },\n  };\n}\n\n/**\n * Standard iOS-style modal animation in iOS 13.\n */\nexport function forModalPresentationIOS({\n  index,\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n  insets,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const hasNotchIos =\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    !Platform.isTVOS &&\n    insets.top > 20;\n  const isLandscape = screen.width > screen.height;\n  const topOffset = isLandscape ? 0 : 10;\n  const statusBarHeight = insets.top;\n  const aspectRatio = screen.height / screen.width;\n\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const isFirst = index === 0;\n\n  const translateY = multiply(\n    progress.interpolate({\n      inputRange: [0, 1, 2],\n      outputRange: [\n        screen.height,\n        isFirst ? 0 : topOffset,\n        (isFirst ? statusBarHeight : 0) - topOffset * aspectRatio,\n      ],\n    }),\n    inverted\n  );\n\n  const overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1],\n  });\n\n  const scale = isLandscape\n    ? 1\n    : progress.interpolate({\n        inputRange: [0, 1, 2],\n        outputRange: [\n          1,\n          1,\n          screen.width ? 1 - (topOffset * 2) / screen.width : 1,\n        ],\n      });\n\n  const borderRadius = isLandscape\n    ? 0\n    : isFirst\n    ? progress.interpolate({\n        inputRange: [0, 1, 1.0001, 2],\n        outputRange: [0, 0, hasNotchIos ? 38 : 0, 10],\n      })\n    : 10;\n\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      // We don't need these for the animation\n      // But different border radius for corners improves animation perf\n      borderBottomLeftRadius: hasNotchIos ? borderRadius : 0,\n      borderBottomRightRadius: hasNotchIos ? borderRadius : 0,\n      marginTop: isFirst ? 0 : statusBarHeight,\n      marginBottom: isFirst ? 0 : topOffset,\n      transform: [{ translateY }, { scale }],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Standard Android-style fade in from the bottom for Android Oreo.\n */\nexport function forFadeFromBottomAndroid({\n  current,\n  inverted,\n  layouts: { screen },\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * 0.08, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const opacity = conditional(\n    closing,\n    current.progress,\n    current.progress.interpolate({\n      inputRange: [0, 0.5, 0.9, 1],\n      outputRange: [0, 0.25, 0.7, 1],\n      extrapolate: 'clamp',\n    })\n  );\n\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{ translateY }],\n    },\n  };\n}\n\n/**\n * Standard Android-style reveal from the bottom for Android Pie.\n */\nexport function forRevealFromBottomAndroid({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const containerTranslateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const cardTranslateYFocused = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * (95.9 / 100) * -1, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const cardTranslateYUnfocused = next\n    ? multiply(\n        next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, screen.height * (2 / 100) * -1],\n          extrapolate: 'clamp',\n        }),\n        inverted\n      )\n    : 0;\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{ translateY: containerTranslateY }],\n    },\n    cardStyle: {\n      transform: [\n        { translateY: cardTranslateYFocused },\n        { translateY: cardTranslateYUnfocused },\n      ],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Standard Android-style zoom for Android 10.\n */\nexport function forScaleFromCenterAndroid({\n  current,\n  next,\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0],\n  });\n\n  const scale = conditional(\n    closing,\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.925, 1],\n      extrapolate: 'clamp',\n    }),\n    progress.interpolate({\n      inputRange: [0, 1, 2],\n      outputRange: [0.85, 1, 1.075],\n    })\n  );\n\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{ scale }],\n    },\n  };\n}\n\n/**\n * Standard bottom sheet slide in from the bottom for Android.\n */\nexport function forBottomSheetAndroid({\n  current,\n  inverted,\n  layouts: { screen },\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * 0.8, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const opacity = conditional(\n    closing,\n    current.progress,\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    })\n  );\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{ translateY }],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Simple fade animation for dialogs\n */\nexport function forFadeFromCenter({\n  current: { progress },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  return {\n    cardStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.5, 0.9, 1],\n        outputRange: [0, 0.25, 0.7, 1],\n      }),\n    },\n    overlayStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 0.5],\n        extrapolate: 'clamp',\n      }),\n    },\n  };\n}\n\nexport function forNoAnimation(): StackCardInterpolatedStyle {\n  return {};\n}\n"]},"metadata":{},"sourceType":"module"}