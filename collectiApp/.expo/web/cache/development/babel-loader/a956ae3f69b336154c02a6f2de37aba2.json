{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button } from \"@rneui/themed\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Input } from \"@rneui/themed\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { color } from \"react-native-reanimated\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useLoginMutation } from \"../../../redux/endpoints/AuthEndpoints\";\nimport { useDispatch } from \"react-redux\";\nimport { setCredentials } from \"../../../redux/slicers/AuthSlice\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScene = function LoginScene() {\n  var _useLoginMutation = useLoginMutation(),\n    _useLoginMutation2 = _slicedToArray(_useLoginMutation, 2),\n    login = _useLoginMutation2[0],\n    isLoading = _useLoginMutation2[1].isLoading;\n  var dispatch = useDispatch();\n  var loginOrganization = function () {\n    var _ref = _asyncToGenerator(function* (values) {\n      try {\n        console.log(values);\n        var organization_data = yield login(_objectSpread({}, values)).unwrap();\n        console.log(organization_data);\n        dispatch(setCredentials(organization_data));\n        console.log(AsyncStorage.getItem(\"token\"));\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Home'\n          }]\n        });\n\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function loginOrganization(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(ImageBackground, {\n      source: require(\"../../../assets/login.jpg\"),\n      style: styles.backGroundPic,\n      children: _jsx(Button, {\n        style: styles.backButton,\n        icon: _jsx(Icon, {\n          name: \"arrow-left\",\n          size: 15,\n          color: \"blue\"\n        }),\n        buttonStyle: styles.backButton,\n        type: \"outline\"\n      })\n    }), _jsx(Text, {\n      style: {\n        fontSize: 30,\n        marginLeft: 12\n      },\n      children: \"Login\"\n    }), _jsx(Formik, {\n      validationSchema: loginValidationSchema,\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        return loginOrganization(values);\n      },\n      children: function children(_ref2) {\n        var handleChange = _ref2.handleChange,\n          handleBlur = _ref2.handleBlur,\n          handleSubmit = _ref2.handleSubmit,\n          values = _ref2.values,\n          errors = _ref2.errors,\n          isValid = _ref2.isValid;\n        return _jsxs(_Fragment, {\n          children: [_jsx(Input, {\n            placeholder: \"Email\",\n            errorStyle: {\n              color: \"red\"\n            },\n            name: \"email\",\n            onChangeText: handleChange(\"email\"),\n            value: values.email,\n            leftIcon: {\n              type: \"MaterialIcons\",\n              name: \"email\",\n              color: \"#5F9DF7\"\n            },\n            errorMessage: errors.email ? errors.email : \"\",\n            renderErrorMessage: errors.email ? true : false\n          }), _jsx(Input, {\n            placeholder: \"Password\",\n            errorStyle: {\n              color: \"red\"\n            },\n            leftIcon: {\n              type: \"MaterialIcons\",\n              name: \"lock\",\n              color: \"#5F9DF7\"\n            },\n            name: \"password\",\n            onChangeText: handleChange(\"password\"),\n            value: values.password,\n            errorMessage: errors.password ? errors.password : \"\",\n            renderErrorMessage: errors.password ? true : false,\n            secureTextEntry: true\n          }), _jsx(Button, {\n            icon: _jsx(Icon, {\n              name: \"arrow-right\",\n              size: 15,\n              color: \"white\",\n              style: {\n                marginLeft: 12\n              }\n            }),\n            buttonStyle: styles.submitButton,\n            title: \"Login\",\n            iconRight: true,\n            onPress: handleSubmit,\n            disabled: !isValid\n          })]\n        });\n      }\n    })]\n  });\n};\nvar loginValidationSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter valid email\").required(\"Email Address is Required\"),\n  password: yup.string().min(8, function (_ref3) {\n    var min = _ref3.min;\n    return \"Password must be at least \" + min + \" characters\";\n  }).required(\"Password is required\")\n});\nexport default LoginScene;","map":{"version":3,"names":["StatusBar","styles","Icon","Button","Input","color","Formik","yup","useLoginMutation","useDispatch","setCredentials","AsyncStorage","LoginScene","login","isLoading","dispatch","loginOrganization","values","console","log","organization_data","unwrap","getItem","navigation","reset","index","routes","name","err","container","require","backGroundPic","backButton","fontSize","marginLeft","loginValidationSchema","email","password","handleChange","handleBlur","handleSubmit","errors","isValid","type","submitButton","object","shape","string","required","min"],"sources":["C:/Users/ELAYEB/OneDrive/Documents/GitHub/collecti/collectiApp/src/views/LoginScene/LoginScene.jsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { styles } from \"./styles\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { Button } from \"@rneui/themed\";\r\nimport { ImageBackground } from \"react-native\";\r\nimport { Input } from \"@rneui/themed\";\r\nimport { ScrollView } from \"react-native\";\r\nimport { color } from \"react-native-reanimated\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useLoginMutation } from \"../../../redux/endpoints/AuthEndpoints\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCredentials } from \"../../../redux/slicers/AuthSlice\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst LoginScene = () => {\r\n  const [login, { isLoading }] = useLoginMutation();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n\r\n  const loginOrganization = async (values) => {\r\n    try {\r\n      console.log(values);\r\n      const organization_data = await login({\r\n        ...values,\r\n      }).unwrap();\r\n      console.log(organization_data);\r\n      dispatch(setCredentials(organization_data))\r\n      console.log(AsyncStorage.getItem(\"token\"))\r\n      navigation.reset({\r\n        index: 0,\r\n        routes: [{name: 'Home'}],\r\n      });\r\n      \r\n\r\n      // navigate(\"/\", { replace: true });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <ImageBackground\r\n        source={require(\"../../../assets/login.jpg\")}\r\n        style={styles.backGroundPic}\r\n      >\r\n        <Button\r\n          style={styles.backButton}\r\n          icon={<Icon name=\"arrow-left\" size={15} color=\"blue\" />}\r\n          buttonStyle={styles.backButton}\r\n          type=\"outline\"\r\n        />\r\n      </ImageBackground>\r\n      <Text style={{ fontSize: 30, marginLeft: 12 }}>Login</Text>\r\n\r\n      <Formik\r\n        validationSchema={loginValidationSchema}\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        onSubmit={(values) => loginOrganization(values)}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          values,\r\n          errors,\r\n          isValid,\r\n        }) => (\r\n          <>\r\n            <Input\r\n              placeholder=\"Email\"\r\n              errorStyle={{ color: \"red\" }}\r\n              name=\"email\"\r\n              onChangeText={handleChange(\"email\")}\r\n              value={values.email}\r\n              leftIcon={{\r\n                type: \"MaterialIcons\",\r\n                name: \"email\",\r\n                color: \"#5F9DF7\",\r\n              }}\r\n              errorMessage={errors.email ? errors.email : \"\"}\r\n              renderErrorMessage={errors.email ? true : false}\r\n            />\r\n\r\n            <Input\r\n              placeholder=\"Password\"\r\n              errorStyle={{ color: \"red\" }}\r\n              leftIcon={{\r\n                type: \"MaterialIcons\",\r\n                name: \"lock\",\r\n                color: \"#5F9DF7\",\r\n              }}\r\n              name=\"password\"\r\n              onChangeText={handleChange(\"password\")}\r\n              value={values.password}\r\n              errorMessage={errors.password ? errors.password : \"\"}\r\n              renderErrorMessage={errors.password ? true : false}\r\n              secureTextEntry={true}\r\n            />\r\n\r\n            <Button\r\n              icon={\r\n                <Icon\r\n                  name=\"arrow-right\"\r\n                  size={15}\r\n                  color=\"white\"\r\n                  style={{ marginLeft: 12 }}\r\n                />\r\n              }\r\n              buttonStyle={styles.submitButton}\r\n              title={\"Login\"}\r\n              iconRight\r\n              onPress={handleSubmit}\r\n              disabled={!isValid}\r\n            />\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </ScrollView>\r\n  );\r\n};\r\nconst loginValidationSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"Please enter valid email\")\r\n    .required(\"Email Address is Required\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, ({ min }) => `Password must be at least ${min} characters`)\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nexport default LoginScene"],"mappings":"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"},"metadata":{},"sourceType":"module"}